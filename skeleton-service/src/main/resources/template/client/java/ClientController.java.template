package ${package};

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${basePackage}.service.ClientService;
<#if clientHystrixEnabled == "true">

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
</#if>

@RestController
public class ClientController {
    @Autowired
    private ClientService clientService;

    @RequestMapping(value = "/invokeGet/{id}", method = RequestMethod.GET)
    <#if clientHystrixEnabled == "true">
    @HystrixCommand(fallbackMethod = "invokeGetFallback")
    </#if>
    public String invokeGet(@PathVariable(value = "id") Integer id) {
        return clientService.invokeGet(id);
    }

    @RequestMapping(value = "/invokePost", method = RequestMethod.POST)
    <#if clientHystrixEnabled == "true">
    @HystrixCommand(fallbackMethod = "invokePostFallback")
    </#if>
    public String invokePost(@RequestParam(value = "data") String data) {
        return clientService.invokePost(data);
    }

    @RequestMapping(value = "/invokePut", method = RequestMethod.PUT)
    <#if clientHystrixEnabled == "true">
    @HystrixCommand(fallbackMethod = "invokePutFallback")
    </#if>
    public String invokePut(@RequestParam(value = "data") String data) {
        return clientService.invokePut(data);
    }

    @RequestMapping(value = "/invokeDelete/{id}", method = RequestMethod.DELETE)
    <#if clientHystrixEnabled == "true">
    @HystrixCommand(fallbackMethod = "invokeDeleteFallback")
    </#if>
    public String invokeDelete(@PathVariable(value = "id") Integer id) {
        return clientService.invokeDelete(id);
    }
    <#if clientHystrixEnabled == "true">

    public String invokeGetFallback(Integer id) {
        String value = "Invoke GET is fallback, parameter=" + id;

        return value;
    }

    public String invokePostFallback(String data) {
        String value = "Invoke POST is fallback, parameter=" + data;

        return value;
    }

    public String invokePutFallback(String data) {
        String value = "Invoke PUT is fallback, parameter=" + data;

        return value;
    }

    public String invokeDeleteFallback(Integer id) {
        String value = "Invoke DELETE is fallback, parameter=" + id;

        return value;
    }
    </#if>
}